/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AzureBotObservation struct {

	// The ID of the Azure Bot Service.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type AzureBotParameters struct {

	// The Application Insights API Key to associate with this Azure Bot Service.
	// +kubebuilder:validation:Optional
	DeveloperAppInsightsAPIKeySecretRef *v1.SecretKeySelector `json:"developerAppInsightsApiKeySecretRef,omitempty" tf:"-"`

	// The resource ID of the Application Insights instance to associate with this Azure Bot Service.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/insights/v1beta1.ApplicationInsights
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("app_id",true)
	// +kubebuilder:validation:Optional
	DeveloperAppInsightsApplicationID *string `json:"developerAppInsightsApplicationId,omitempty" tf:"developer_app_insights_application_id,omitempty"`

	// Reference to a ApplicationInsights in insights to populate developerAppInsightsApplicationId.
	// +kubebuilder:validation:Optional
	DeveloperAppInsightsApplicationIDRef *v1.Reference `json:"developerAppInsightsApplicationIdRef,omitempty" tf:"-"`

	// Selector for a ApplicationInsights in insights to populate developerAppInsightsApplicationId.
	// +kubebuilder:validation:Optional
	DeveloperAppInsightsApplicationIDSelector *v1.Selector `json:"developerAppInsightsApplicationIdSelector,omitempty" tf:"-"`

	// The Application Insight Key to associate with this Azure Bot Service.
	// +kubebuilder:validation:Optional
	DeveloperAppInsightsKey *string `json:"developerAppInsightsKey,omitempty" tf:"developer_app_insights_key,omitempty"`

	// The name that the Azure Bot Service will be displayed as. This defaults to the value set for name if not specified.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The Azure Bot Service endpoint.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`

	// The supported Azure location where the Azure Bot Service should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// A list of LUIS App IDs to associate with this Azure Bot Service.
	// +kubebuilder:validation:Optional
	LuisAppIds []*string `json:"luisAppIds,omitempty" tf:"luis_app_ids,omitempty"`

	// The LUIS key to associate with this Azure Bot Service.
	// +kubebuilder:validation:Optional
	LuisKeySecretRef *v1.SecretKeySelector `json:"luisKeySecretRef,omitempty" tf:"-"`

	// The Microsoft Application ID for the Azure Bot Service. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	MicrosoftAppID *string `json:"microsoftAppId" tf:"microsoft_app_id,omitempty"`

	// The name of the Resource Group where the Azure Bot Service should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// The SKU of the Azure Bot Service. Accepted values are F0 or S1. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Sku *string `json:"sku" tf:"sku,omitempty"`

	// A mapping of tags which should be assigned to this Azure Bot Service.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// AzureBotSpec defines the desired state of AzureBot
type AzureBotSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AzureBotParameters `json:"forProvider"`
}

// AzureBotStatus defines the observed state of AzureBot.
type AzureBotStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AzureBotObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AzureBot is the Schema for the AzureBots API. Manages an Azure Bot Service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type AzureBot struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AzureBotSpec   `json:"spec"`
	Status            AzureBotStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AzureBotList contains a list of AzureBots
type AzureBotList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AzureBot `json:"items"`
}

// Repository type metadata.
var (
	AzureBot_Kind             = "AzureBot"
	AzureBot_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AzureBot_Kind}.String()
	AzureBot_KindAPIVersion   = AzureBot_Kind + "." + CRDGroupVersion.String()
	AzureBot_GroupVersionKind = CRDGroupVersion.WithKind(AzureBot_Kind)
)

func init() {
	SchemeBuilder.Register(&AzureBot{}, &AzureBotList{})
}
