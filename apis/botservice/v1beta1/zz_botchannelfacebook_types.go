/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BotChannelFacebookObservation struct {

	// The ID of the Facebook Integration for a Bot Channel.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type BotChannelFacebookParameters struct {

	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/botservice/v1beta1.BotChannelsRegistration
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	BotName *string `json:"botName,omitempty" tf:"bot_name,omitempty"`

	// Reference to a BotChannelsRegistration in botservice to populate botName.
	// +kubebuilder:validation:Optional
	BotNameRef *v1.Reference `json:"botNameRef,omitempty" tf:"-"`

	// Selector for a BotChannelsRegistration in botservice to populate botName.
	// +kubebuilder:validation:Optional
	BotNameSelector *v1.Selector `json:"botNameSelector,omitempty" tf:"-"`

	// The Facebook Application ID for the Facebook Channel.
	// +kubebuilder:validation:Required
	FacebookApplicationID *string `json:"facebookApplicationId" tf:"facebook_application_id,omitempty"`

	// The Facebook Application Secret for the Facebook Channel.
	// +kubebuilder:validation:Required
	FacebookApplicationSecretSecretRef v1.SecretKeySelector `json:"facebookApplicationSecretSecretRef" tf:"-"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// One or more page blocks as defined below.
	// +kubebuilder:validation:Required
	Page []PageParameters `json:"page" tf:"page,omitempty"`

	// The name of the resource group where the Facebook Channel should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// Reference to a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// Selector for a ResourceGroup in azure to populate resourceGroupName.
	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`
}

type PageObservation struct {
}

type PageParameters struct {

	// The Facebook Page Access Token for the Facebook Channel.
	// +kubebuilder:validation:Required
	AccessTokenSecretRef v1.SecretKeySelector `json:"accessTokenSecretRef" tf:"-"`

	// The Facebook Page ID for the Facebook Channel.
	// +kubebuilder:validation:Required
	ID *string `json:"id" tf:"id,omitempty"`
}

// BotChannelFacebookSpec defines the desired state of BotChannelFacebook
type BotChannelFacebookSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BotChannelFacebookParameters `json:"forProvider"`
}

// BotChannelFacebookStatus defines the observed state of BotChannelFacebook.
type BotChannelFacebookStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BotChannelFacebookObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// BotChannelFacebook is the Schema for the BotChannelFacebooks API. Manages a Facebook integration for a Bot Channel
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type BotChannelFacebook struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BotChannelFacebookSpec   `json:"spec"`
	Status            BotChannelFacebookStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BotChannelFacebookList contains a list of BotChannelFacebooks
type BotChannelFacebookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BotChannelFacebook `json:"items"`
}

// Repository type metadata.
var (
	BotChannelFacebook_Kind             = "BotChannelFacebook"
	BotChannelFacebook_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BotChannelFacebook_Kind}.String()
	BotChannelFacebook_KindAPIVersion   = BotChannelFacebook_Kind + "." + CRDGroupVersion.String()
	BotChannelFacebook_GroupVersionKind = CRDGroupVersion.WithKind(BotChannelFacebook_Kind)
)

func init() {
	SchemeBuilder.Register(&BotChannelFacebook{}, &BotChannelFacebookList{})
}
